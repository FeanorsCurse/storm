/**
 * Copyright (c) 2009/2010, Very Large Business Applications, University Oldenburg. Specifically:
 * Daniel Süpke <suepke@gmx.de>
 * Andreas Solsbach <solsbach@wi-ol.de>
 * Benjamin Wagner vom Berg <wagnervomberg@wi-ol.de>
 * Prof. Dr. Jorge Marx Gomez <jorge.marx.gomez@uni-oldenburg.de>
 * Christian Wenke <cw81@cw81.de>
 * Desislava Dechkova <desislavamd@yahoo.com>
 * Edzard Fisch <edzard.fisch@googlemail.com>
 * Frank Gerken <frank.gerken@uni-oldenburg.de>
 * Gerrit Meerpohl <gerrit.meerpohl@uni-oldenburg.de>
 * Irene Fröhlich <froehlich.irene@web.de>
 * Kerem-Kazim Sezer <Kerem.Sezer@gmx.de>
 * Olaf Roeder <o.roeder@gmx.net>
 * Oliver Norkus <oliver.norkus@googlemail.com>
 * Rachid Lacheheb <rachid.lacheheb@mail.uni-oldenburg.de>
 * Sebastian van Vliet <sebastian.van.vliet@mail.uni-oldenburg.de>
 * Swetlana Lipnitskaya <swetlana.lipnitskaya@uni-oldenburg.de>
 * 
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 * 
 *     * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
 *     * Neither the name of the copyright holders nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */
 
package ReportEditorMain.ArticleEditor

import systemadministration.usermanagement.User
import systemadministration.log.AccessLog
import systemadministration.recommender.AccessArticleTyp
import shemaEditor.shemaAdministration.TNode
import shemaEditor.indicatorAdministration.Indicator
import ReportEditorMain.Enum.ArticleStatus
import interactiveFeatures.Usercomments.Usercomment
import ReportEditorMain.ReportEditor.Report

import org.grails.taggable.*
import org.grails.rateable.*
import org.grails.comments.*
import org.codehaus.groovy.grails.commons.ApplicationHolder

/*
 *This class matches the "Artikel" from the STORM concept paper. All data about
 *articles is stored here.
 *@author Gerrit, Olaf
 */
class Article implements Taggable, Rateable {
	
	//make this class searchable with the searchable plugin
	static searchable = true
	
	//Attributes for this class
	String name
	String content
	ArticleStatus status
	Article parentArticle //Pointer to the Parent Article
	Article revArticle //Pointer to the Revision Article
	User author
	int sequence //Sequence of Articles at the same Level
	String number //e.g. 1.1, generated by the system
	TNode tnode //Pointer to the TNode
	
	//article-lock
	User lockUser
	int lockTimestamp
	
	//Magic Field Names
	Date dateCreated
	Date lastUpdated
	
	//1-to-Many Relations to other Domain classes
	static hasMany = [usercomments:Usercomment, indicator:Indicator, accessLogs:AccessLog, accessArticleTyps:AccessArticleTyp]
	
	//String representation
	String toString(){
		if(number==null){
			return name
		}else{
			return number+" "+name
		}
	}
	
	//constraints
	static constraints = {
		name(blank:false)
		content(nullable:true,size:0..1000000)
		status(nullable:true)
		author(nullable:true)
		parentArticle(nullable:true)
		sequence(nullable:true)
		number(nullable:true)
		revArticle(nullable:true)
		tnode(nullable:true)
		lockUser(nullable:true)
		lockTimestamp(nullable:true)
		dateCreated()
		lastUpdated()
	}
	
	@Override
	public boolean equals(Object obj) {
		if (((Article)obj).id.equals(this.id)){
			return true;
		}else{	
			return false;
		}
	}
	
}
